"use strict";(self.webpackChunkhydra_head_protocol_docs=self.webpackChunkhydra_head_protocol_docs||[]).push([[3392],{19257:(e,t,n)=>{n.d(t,{Z:()=>r});var o=n(67294),a=n(90814);const i={terminalWindow:"terminalWindow_wGrl",terminalWindowHeader:"terminalWindowHeader_o9Cs",terminalWindowBody:"terminalWindowBody_tzdS",row:"row_Rn7G",buttons:"buttons_IGLB",right:"right_fWp9",dot:"dot_fGZE"};function r(e){let{children:t,minHeight:n}=e;const r="string"==typeof t?o.createElement(a.Z,null,t):t;return o.createElement("div",{className:i.terminalWindow,style:{minHeight:n}},o.createElement("div",{className:i.terminalWindowHeader},o.createElement("div",{className:i.buttons},o.createElement("span",{className:i.dot,style:{background:"#f25f58"}}),o.createElement("span",{className:i.dot,style:{background:"#fbbe3c"}}),o.createElement("span",{className:i.dot,style:{background:"#58cb42"}}))),o.createElement("div",{className:i.terminalWindowBody},r))}},13441:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(87462),a=(n(67294),n(3905)),i=n(19257);const r={sidebar_position:2},d="With Docker",s={unversionedId:"getting-started/demo/with-docker",id:"getting-started/demo/with-docker",title:"With Docker",description:"We'll be using Docker and compose to get the demo running, so make sure you have them in scope or, jump right away to Running The Demo: Without Docker if you feel like doing it the hard way.",source:"@site/docs/getting-started/demo/with-docker.md",sourceDirName:"getting-started/demo",slug:"/getting-started/demo/with-docker",permalink:"/head-protocol/docs/getting-started/demo/with-docker",draft:!1,editUrl:"https://github.com/input-output-hk/hydra/tree/master/docs/docs/getting-started/demo/with-docker.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"defaultSidebar",previous:{title:"Demo",permalink:"/head-protocol/docs/getting-started/demo/"},next:{title:"Without Docker",permalink:"/head-protocol/docs/getting-started/demo/without-docker"}},l={},c=[{value:"Setting-up The Chain",id:"setting-up-the-chain",level:2},{value:"Seeding The Network",id:"seeding-the-network",level:2},{value:"Starting Hydra Nodes",id:"starting-hydra-nodes",level:2},{value:"Running The Clients",id:"running-the-clients",level:2}],p={toc:c},h="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(h,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"with-docker"},"With Docker"),(0,a.kt)("p",null,"We'll be using ",(0,a.kt)("a",{parentName:"p",href:"https://www.docker.com/get-started"},"Docker")," and ",(0,a.kt)("a",{parentName:"p",href:"https://www.docker.com/get-started"},"compose")," to get the demo running, so make sure you have them in scope or, jump right away to ",(0,a.kt)("a",{parentName:"p",href:"/docs/getting-started/demo/without-docker"},"Running The Demo: Without Docker")," if you feel like doing it the hard way."),(0,a.kt)("admonition",{title:"Shortcut",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"For convenience, we also provide a script ",(0,a.kt)("inlineCode",{parentName:"p"},"./run-docker.sh"),", which combines the steps above. It also performs a few sanity checks to avoid tripping ourselves. ")),(0,a.kt)("admonition",{title:"Context",type:"info"},(0,a.kt)("p",{parentName:"admonition"},"All commands below are written as if executed from the ",(0,a.kt)("inlineCode",{parentName:"p"},"demo")," folder in the project repository, so make sure to clone the repository and ",(0,a.kt)("inlineCode",{parentName:"p"},"cd demo")," before doing anything else.")),(0,a.kt)("admonition",{title:"OS Compatibility",type:"warning"},(0,a.kt)("p",{parentName:"admonition"},"These instructions have been tested only on Linux environments (Ubuntu, NixOS). If you're on Windows or Mac OS X, you might need to adapt to use ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/storage/volumes/"},"Volumes"),".")),(0,a.kt)("h2",{id:"setting-up-the-chain"},"Setting-up The Chain"),(0,a.kt)("p",null,"To get started, let's pull the necessary images for services defined in the compose file:"),(0,a.kt)(i.Z,{mdxType:"TerminalWindow"},"docker-compose --profile tui --profile hydra-node pull"),(0,a.kt)("p",null,"From there, we can run the ",(0,a.kt)("inlineCode",{parentName:"p"},"./prepare-devnet.sh")," script to create an initial configuration for our development network. This creates genesis files needed to bootstrap a Cardano blockchain. Note that, for the demo, we use a simple variant of Cardano that requires no stake pools whatsoever."),(0,a.kt)(i.Z,{mdxType:"TerminalWindow"},"./prepare-devnet.sh"),(0,a.kt)("p",null,"We can now bring the Cardano node up with:"),(0,a.kt)(i.Z,{mdxType:"TerminalWindow"},"docker-compose up -d cardano-node"),(0,a.kt)("admonition",{title:"Caution!",type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"As we use ad-hoc private devnets that start from the genesis block, you need to ensure the devnet configuration is reasonably up to date. If you get ",(0,a.kt)("inlineCode",{parentName:"p"},"TraceNoLedgerView")," errors from the Cardano node, the start times are too far in the past and you should update them by using the ",(0,a.kt)("inlineCode",{parentName:"p"},"prepare-devnet.sh")," script, for example.")),(0,a.kt)("p",null,"You can verify that the node is up-and-running by checking the logs with ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose logs cardano-node -f"),". You should see traces containing ",(0,a.kt)("inlineCode",{parentName:"p"},"TraceAdoptedBlock"),", which means that the devnet is producing blocks .. nice!"),(0,a.kt)("h2",{id:"seeding-the-network"},"Seeding The Network"),(0,a.kt)("p",null,'In the current stage of development, Hydra nodes need a specially crafted set of UTXO to drive the Head protocol ("fuel"), and of course, some UTXO to be committed to the Head.\nWe include a script ',(0,a.kt)("inlineCode",{parentName:"p"},"seed-devnet.sh")," that uses the ",(0,a.kt)("inlineCode",{parentName:"p"},"cardano-cli")," in the already running ",(0,a.kt)("inlineCode",{parentName:"p"},"cardano-node")," container to give Alice, Bob, and Carol some UTXO entries to commit and some fuel UTXO."),(0,a.kt)(i.Z,{mdxType:"TerminalWindow"},"./seed-devnet.sh"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"The seed transactions are just normal transactions, so one could use any other Cardano client to create them. Yet, they must have the following characteristics:\nMust pay outputs to commit to the key used by the Hydra Node's internal wallet, as defined by argument ",(0,a.kt)("inlineCode",{parentName:"p"},"--cardano-signing-key")," of hydra-node executable,\nOne of the outputs must include datum hash ",(0,a.kt)("inlineCode",{parentName:"p"},"a654fb60d21c1fed48db2c320aa6df9737ec0204c0ba53b9b94a09fb40e757f3"),', as this is our "fuel" marker.')),(0,a.kt)("h2",{id:"starting-hydra-nodes"},"Starting Hydra Nodes"),(0,a.kt)("p",null,"Finally, now that the on-chain preparations are ready, we can bring the Hydra network (i.e. all three nodes for Alice, Bob and Carol) up by running:"),(0,a.kt)(i.Z,{mdxType:"TerminalWindow"},"docker-compose --profile hydra-node up -d"),(0,a.kt)("h2",{id:"running-the-clients"},"Running The Clients"),(0,a.kt)("p",null,"Using compose, you can start the demo Terminal-based User Interface (a.k.a. ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-tui"),") to interact with Hydra nodes. There are 3 preconfigured TUI services in the compose definition: ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-tui-1"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-tui-2"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-tui-3"),". To connect to the first Hydra node in a terminal, run the following commands:"),(0,a.kt)(i.Z,{mdxType:"TerminalWindow"},"docker-compose --profile tui run hydra-tui-1"),(0,a.kt)("p",null,"This will start a full-blown terminal interface loaded with signing keys corresponding to the first Hydra node. In other terminals, you can start other nodes in a similar fashion targeting ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-tui-2")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"hydra-tui-3")," services."))}m.isMDXComponent=!0}}]);